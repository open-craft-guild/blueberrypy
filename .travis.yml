language: python

python:
  - 2.7
  - 3.3
  - 3.4
  - 3.5
  - 3.6
  - 3.6-dev
  - nightly # == 3.7-dev

_base_envs:
- &stage_test
  stage: test
- &linux_base
  os: linux
  sudo: false
- &pyenv_base
  <<: *stage_test
  language: generic
  python: pypy
  dist: trusty
  sudo: required
  group: edge
  addons:
    postgresql: 9.6
    apt:
      packages:
      - make
      - build-essential
      - libssl-dev
      - zlib1g-dev
      - libbz2-dev
      - libgeos-c1
      - libreadline-dev
      - libsqlite3-dev
      - wget
      - curl
      - llvm
      - libncurses5-dev
      - libncursesw5-dev
      - xz-utils
      - tk-dev
      - postgresql-9.6-postgis-2.3
  env:
  - PYTHON_VERSION=pypy2-5.7.1
  - &env_pyenv PYENV_ROOT="$HOME/.pyenv"
  - &env_path PATH="$PYENV_ROOT/bin:$PATH"
  before_install:
  - &ensure_pyenv_installed |
    if [ -f "$PYENV_ROOT/bin/pyenv" ]
    then
      eval "$(pyenv init -)"
      eval "$(pyenv virtualenv-init -)"
      pyenv update
    else
      rm -rf "$PYENV_ROOT"
      curl -L https://raw.githubusercontent.com/pyenv/pyenv-installer/master/bin/pyenv-installer | bash
      eval "$(pyenv init -)"
      eval "$(pyenv virtualenv-init -)"
    fi
  - &install_python pyenv install --skip-existing --keep --verbose "$PYTHON_VERSION"
  - &switch_python pyenv shell "$PYTHON_VERSION"
  - &python_version python --version
- &linux_python_base
  <<: *linux_base
  <<: *pyenv_base

matrix:
  fast_finish: true
  allow_failures:
    - python: nightly
    - python: pypy
    - python: pypy3
  include:
  - <<: *linux_python_base
    python: pypy
    env:
    - PYTHON_VERSION=pypy2-5.7.1
    - *env_pyenv
    - *env_path
  - <<: *linux_python_base
    python: pypy3
    env:
    - PYTHON_VERSION=pypy3.5-5.7.1-beta
    - *env_pyenv
    - *env_path

env:
  BLUEBERRYPY_CONFIG: '{}'

cache: pip

services:
  - postgresql
  - redis-server

before_install:
  - pip install --upgrade setuptools pip
install:
  - pip install --allow-external cdecimal --no-use-wheel -e .[all,speedups,dev]
  - psql --command="CREATE ROLE tester PASSWORD 'tester' INHERIT LOGIN;" --username=postgres
  - createdb --encoding=UTF-8 --username=postgres --owner=tester test_blueberrypy
  - psql --command='CREATE EXTENSION postgis;' --dbname=test_blueberrypy --username=postgres
  - psql --command='CREATE EXTENSION postgis_topology;' --dbname=test_blueberrypy --username=postgres

before_script: export TOX_PY_VERSION="py$(echo $TRAVIS_PYTHON_VERSION | sed 's/\.//g' | sed 's/\-dev$//g' | sed 's/^nightly$/37/g')"

script: tox -e "${TOX_PY_VERSION}"

notifications:
  email: true
